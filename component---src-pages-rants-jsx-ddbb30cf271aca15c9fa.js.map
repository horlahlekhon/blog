{"version":3,"sources":["webpack:///./src/images/rant_page_header.jpg","webpack:///./src/pages/rants.jsx"],"names":["module","exports","Rants","edges","data","allMarkdownRemark","title","headerImage","rantHeader","map","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","query"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,gE,kCCA3C,yIA8BeC,UAtBD,SAAC,GAAc,IACnBC,EADkB,EAAXC,KACQC,kBAAfF,MACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,UACf,YAAC,IAAD,CAAQA,MAAM,8BAA8BC,YAAaC,KAAzD,wDAECL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBX,MAAOI,EAAKI,YAAYR,MACxBY,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,eA8BjB,IAAMC,EAAK","file":"component---src-pages-rants-jsx-ddbb30cf271aca15c9fa.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/rant_page_header-a6756ee03d2167e59d4077cc52340c21.jpg\";","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { BlogList, Header } from \"components\"\nimport { Layout } from \"layouts\"\nimport rantHeader from \"../images/rant_page_header.jpg\"\n\nconst Rants = ({ data }) => {\n  const { edges } = data.allMarkdownRemark\n  return (\n    <Layout>\n      <Helmet title={\"Rants\"} />\n      <Header title=\"Rants about Life and beyond\" headerImage={rantHeader}>\"wait! Its only an illusion; the die is never\n        cast‚Äù </Header>\n      {edges.map(({ node }) => (\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Rants\n\nRants.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired,\n      ),\n    }),\n  }),\n}\n\nexport const query = graphql`\n    query {\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, filter: {frontmatter: {category: {eq: \"rants\"}}}){\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 200)\n            frontmatter {\n              title\n              path\n              tags\n              date(formatString: \"MM.DD.YYYY\")\n              cover {\n                childImageSharp {\n                  fluid(\n                    maxWidth: 1000\n                    quality: 90\n                    traceSVG: { color: \"#2B2B2F\" }\n                  ) {\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `\n  "],"sourceRoot":""}