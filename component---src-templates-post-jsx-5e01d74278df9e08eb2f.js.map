{"version":3,"sources":["webpack:///./src/layouts/PostLayout.jsx","webpack:///./src/templates/post.jsx"],"names":["PostLayout","children","postImage","theme","styles","css","colors","link","linkHover","fontFamily","heading","headroom","SuggestionBar","props","white","light","shadow","suggestion","PostSuggestion","query","Post","data","pageContext","next","prev","markdownRemark","html","frontmatter","excerpt","date","title","tags","path","description","image","cover","childImageSharp","fluid","PostImage","src","PostImageWrapper","Title","TitleWrapper","Subtitle","postDate","Date","banner","pathname","article","toLocaleString","month","getDate","getFullYear","style","margin","input","list","to"],"mappings":"6RAqEeA,EA1DI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,EAAaC,UAAb,OACjB,YAAC,IAAD,CAAeC,MAAOA,KACpB,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,OAAQC,YAAF,6XA+BOF,IAAMG,OAAOC,KA/BpB,mFAqCOJ,IAAMG,OAAOE,UArCpB,oBAwCaL,IAAMM,WAAWC,QAxC9B,KA2CFC,IA3CE,MA8CR,YAAC,IAAD,MACA,YAAC,IAAD,MACCV,EACD,YAAC,IAAD,SCvDN,IAAMW,EAAa,mHAIH,SAAAC,GAAK,OAAIA,EAAMV,MAAMG,OAAOQ,MAAMC,QAJ/B,gBAKH,SAAAF,GAAK,OAAIA,EAAMV,MAAMa,OAAOC,aALzB,KAObC,EAAc,4HA8GPC,GAVEC,UA9FF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KADwB,EAECH,EAAKI,eAApCC,EAF8B,EAE9BA,KAAMC,EAFwB,EAExBA,YAAaC,EAFW,EAEXA,QACnBC,EAAyCF,EAAzCE,KAAMC,EAAmCH,EAAnCG,MAAOC,EAA4BJ,EAA5BI,KAAMC,EAAsBL,EAAtBK,KAAMC,EAAgBN,EAAhBM,YAC3BC,EAAQP,EAAYQ,MAAMC,gBAAgBC,MAC1CC,EAAS,0DACSJ,EAAMK,IADf,sEAMTC,EAAgB,kJAOhBC,EAAK,sKASLC,EAAY,+KASZC,EAAQ,8IAQRC,EAAW,IAAIC,KAAKhB,GAC1B,OACE,YAAC,EAAD,CAAY3B,UAAWgC,EAAMK,KAC3B,YAAC,IAAD,CACET,MAAOA,EACPG,YAAaA,GAAeL,GAAW,IACvCkB,OAAQZ,EACRa,SAAUf,EACVgB,SAAO,IAET,YAAC,IAAD,CAAQlB,MAAOA,EAAOD,KAAMA,EAAMM,MAAOD,EAAMK,MAC/C,YAAC,IAAD,KACE,YAACC,EAAD,KACE,YAACE,EAAD,KACE,YAACD,EAAD,KACGX,GAEH,YAACa,EAAD,KACE,4BAAQC,EAASK,eAAe,UAAW,CAAEC,MAAO,SAApD,IAAgEN,EAASO,UAAzE,KAAsFP,EAASQ,eAC/F,oBAAMC,MAAO,CAAEC,OAAQ,YAAvB,KACA,uCAGJ,YAAChB,EAAD,OAEF,YAAC,IAAD,CAASiB,MAAO7B,IAChB,YAAC,IAAD,CAAW8B,KAAMzB,GAAQ,MAE3B,YAACnB,EAAD,KACE,YAACM,EAAD,KACGM,GACC,YAAC,OAAD,CAAMiC,GAAIjC,EAAKG,YAAYK,MAA3B,WAEE,sBAAKR,EAAKG,YAAYG,SAI5B,YAACZ,EAAD,KACGK,GACC,YAAC,OAAD,CAAMkC,GAAIlC,EAAKI,YAAYK,MAA3B,OAEE,sBAAKT,EAAKI,YAAYG,YAmBlB","file":"component---src-templates-post-jsx-5e01d74278df9e08eb2f.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { ThemeProvider } from \"emotion-theming\"\nimport { css, Global } from \"@emotion/core\"\nimport PropTypes from \"prop-types\"\nimport \"typeface-open-sans\"\nimport \"typeface-candal\"\nimport { SEO } from \"components\"\nimport { Footer, NavBar } from \"layouts\"\nimport theme from \"../../config/theme\"\nimport headroom from \"../styles/headroom\"\n\nconst PostLayout = ({ children, postImage }) => (\n  <ThemeProvider theme={theme}>\n    <Fragment>\n      <Global\n        styles={css`\n          *,\n          *:before,\n          *:after {\n            box-sizing: inherit;\n          }\n          html {\n            text-rendering: optimizeLegibility;\n            overflow-x: hidden;\n            box-sizing: border-box;\n            -ms-overflow-style: scrollbar;\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          html,\n          body {\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            \n          }\n          body {\n            //background: url(${postImage});\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n            \n          }\n          a {\n            color: ${theme.colors.link};\n            transition: color 0.5s;\n            text-decoration: none;\n          }\n          a:hover {\n            text-decoration: none;\n            color: ${theme.colors.linkHover};\n          }\n          h1 {\n            font-family: ${theme.fontFamily.heading};\n          }\n\n          ${headroom}\n        `}\n      />\n      <SEO />\n      <NavBar />\n      {children}\n      <Footer />\n    </Fragment>\n  </ThemeProvider>\n)\n\nexport default PostLayout\n\nPostLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n  postImage: PropTypes.string.isRequired,\n}\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport { Container, Content } from \"layouts\"\nimport { Header, SEO, TagsBlock } from \"components\"\nimport \"../styles/prism\"\nimport PostLayout from \"../layouts/PostLayout\"\n\nconst SuggestionBar = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background: ${props => props.theme.colors.white.light};\n  box-shadow: ${props => props.theme.shadow.suggestion};\n`\nconst PostSuggestion = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1rem 3rem 0 3rem;\n`\n\nconst Post = ({ data, pageContext }) => {\n  const { next, prev } = pageContext\n  const { html, frontmatter, excerpt } = data.markdownRemark\n  const { date, title, tags, path, description } = frontmatter\n  const image = frontmatter.cover.childImageSharp.fluid\n  const PostImage = styled.div`\n        background: url(${image.src}) no-repeat fixed center;\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        `\n  const PostImageWrapper = styled.div`\n    position: relative;\n    width: 956px;\n    height: 400px;\n    display: flex;\n    justify-content: center;\n`\n  const Title = styled.p`\n    text-align: center;\n    color: white;\n    display: block;\n    \n    font-size: 40px;\n    font-stretch: expanded;\n    font-weight: lighter;\n`\n  const TitleWrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    z-index: 1;\n    height: 200px;\n`\n  const Subtitle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    color: antiquewhite;\n    \n    \n`\n  const postDate = new Date(date)\n  return (\n    <PostLayout postImage={image.src}>\n      <SEO\n        title={title}\n        description={description || excerpt || \" \"}\n        banner={image}\n        pathname={path}\n        article\n      />\n      <Header title={title} date={date} cover={image.src} />\n      <Container>\n        <PostImageWrapper>\n          <TitleWrapper>\n            <Title>\n              {title}\n            </Title>\n            <Subtitle>\n              <span> {postDate.toLocaleString(\"default\", { month: \"long\" })} {postDate.getDate()}, {postDate.getFullYear()}</span>\n              <span style={{ margin: \"0px 5px\" }}>|</span>\n              <span>4 minutes</span>\n            </Subtitle>\n          </TitleWrapper>\n          <PostImage />\n        </PostImageWrapper>\n        <Content input={html} />\n        <TagsBlock list={tags || []} />\n      </Container>\n      <SuggestionBar>\n        <PostSuggestion>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous\n              <h3>{prev.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n        <PostSuggestion>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next\n              <h3>{next.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n      </SuggestionBar>\n    </PostLayout>\n  )\n}\n\nexport default Post\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n  }).isRequired,\n  data: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        date\n        title\n        tags\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 956, height: 400, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}