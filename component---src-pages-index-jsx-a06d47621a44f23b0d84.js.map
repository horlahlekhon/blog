{"version":3,"sources":["webpack:///./src/components/HomeHeader.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/images/index_image_header.jpg"],"names":["Wrapper","props","headerImage","theme","breakpoints","s","m","Text","colors","white","base","layout","Subtitle","light","HomeHeader","children","title","date","cover","fluid","defaultProps","PostWrapper","query","Index","edges","data","allMarkdownRemark","indexHeader","map","node","id","excerpt","frontmatter","path","key","childImageSharp","module","exports"],"mappings":"sKAOMA,G,MAAO,mEACa,SAAAC,GAAK,OAAIA,EAAMC,aAD5B,uBAEW,SAAAD,GAAK,OAAIA,EAAME,MAAMC,YAAYC,GAF5C,yJAOU,SAAAJ,GAAK,OAAIA,EAAME,MAAMC,YAAYE,GAP3C,qCAUU,SAAAL,GAAK,OAAIA,EAAME,MAAMC,YAAYC,GAV3C,uDAiBPE,EAAI,iDACC,SAAAN,GAAK,OAAIA,EAAME,MAAMK,OAAOC,MAAMC,MADnC,0JAWK,SAAAT,GAAK,OAAIA,EAAME,MAAMQ,OAAOD,MAXjC,0DAiBJE,EAAQ,+DAEH,SAAAX,GAAK,OAAIA,EAAME,MAAMK,OAAOC,MAAMI,OAF/B,KAKRC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,MAAOhB,EAAjC,EAAiCA,YAAjC,OACjB,YAACF,EAAD,CAASE,YAAaA,GACpB,YAAC,IAAD,CAAKiB,MAAOD,GAAS,IAAM,IAAM,KACjC,YAACX,EAAD,KACE,sBAAKS,GACL,sBAAKC,GACJF,GAAY,YAACH,EAAD,KAAWG,MAKfD,IAcfA,EAAWM,aAAe,CACxBL,UAAU,EACVG,OAAO,EACPD,MAAM,EACND,OAAO,G,mECjET,IAAMK,EAAW,sRA+DJC,GAvBEC,UA1BD,SAAC,GAAc,IACnBC,EADkB,EAAXC,KACQC,kBAAfF,MACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQR,MAAO,uBACf,YAAC,EAAD,CAAYA,MAAM,kBAAkBd,YAAayB,KAAjD,4FACA,YAACN,EAAD,KACGG,EAAMI,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,YACbd,EAA6Bc,EAA7Bd,MAAOe,EAAsBD,EAAtBC,KAAMjB,EAAgBgB,EAAhBhB,MAAOC,EAASe,EAATf,KAC5B,OACE,YAAC,IAAD,CACEiB,IAAKJ,EACLZ,MAAOA,EAAMiB,gBAAgBhB,MAC7Bc,KAAMA,EACNjB,MAAOA,EACPC,KAAMA,EACNc,QAASA,SAgCL,e,oBCzElBK,EAAOC,QAAU,IAA0B","file":"component---src-pages-index-jsx-a06d47621a44f23b0d84.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\n\nconst Wrapper =  styled.header`\n  background-image: url(${props => props.headerImage});\n   @media (max-width: ${props => props.theme.breakpoints.s}) {\n    -webkit-clip-path: polygon(100% 0, 0 0, 0 90%, 50% 100%, 100% 90%);\n    clip-path: polygon(100% 0, 0 0, 0 90%, 50% 100%, 100% 90%);\n  }\n  height: 300px;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    height: 300px;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.s}) {\n    height: 275px;\n  }\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Text = styled.div`\n  color: ${props => props.theme.colors.white.base};\n  z-index: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: ${props => props.theme.layout.base};\n  padding: 0 2rem;\n  margin-bottom: 3rem;\n  align-items: center;\n`;\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: ${props => props.theme.colors.white.light};\n`;\n\nconst HomeHeader = ({ children, title, date, cover, headerImage}) => (\n  <Wrapper headerImage={headerImage}>\n    <Img fluid={cover || {} || [] || ''} />\n    <Text>\n      <h1>{title}</h1>\n      <h3>{date}</h3>\n      {children && <Subtitle>{children}</Subtitle>}\n    </Text>\n  </Wrapper>\n);\n\nexport default HomeHeader;\n\nHomeHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  cover: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  headerImage: PropTypes.string,\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.bool,\n  ]),\n};\n\nHomeHeader.defaultProps = {\n  children: false,\n  cover: false,\n  date: false,\n  title: false,\n};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from '@emotion/styled';\nimport {  PostList } from '../components';\nimport HomeHeader from '../components/HomeHeader'\nimport { Layout } from 'layouts';\nimport indexHeader from '../images/index_image_header.jpg'\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 4rem 4rem 1rem 4rem;\n  @media (max-width: 1000px) {\n    margin: 4rem 2rem 1rem 2rem;\n  }\n  @media (max-width: 700px) {\n    margin: 4rem 1rem 1rem 1rem;\n  }\n`;\n\nconst Index = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Olalekan - Adebari'} />\n      <HomeHeader title=\"Home sweet home\" headerImage={indexHeader}>Soon, we shall all understand; there is so much bugs in softwares that poetry can solve </HomeHeader>\n      <PostWrapper>\n        {edges.map(({ node }) => {\n          const { id, excerpt, frontmatter } = node;\n          const { cover, path, title, date } = frontmatter;\n          return (\n            <PostList\n              key={id}\n              cover={cover.childImageSharp.fluid}\n              path={path}\n              title={title}\n              date={date}\n              excerpt={excerpt}\n            />\n          );\n        })}\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 6\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 75)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/index_image_header-1fc9ba237bfca19d08a973f8e431430a.jpg\";"],"sourceRoot":""}